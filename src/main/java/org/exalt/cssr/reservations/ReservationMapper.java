package org.exalt.cssr.reservations;

import org.reservations.cssr.ReservationSoap;
import org.reservations.cssr.ReservationStatusSoap;
import org.springframework.stereotype.Service;

import javax.xml.datatype.DatatypeFactory;
import javax.xml.datatype.XMLGregorianCalendar;
import java.time.LocalDateTime;

/**
 * Map between the original Reservation entity and ReservationSoap
 */
@Service
public class ReservationMapper {
    /**
     * Mapping between the original entity and the soap entity
     *
     * @param reservation the original entity
     * @return reservationSoap that generated by the jaxb plugin
     */
    public ReservationSoap mapReservationToReservationSoap(Reservation reservation) {
        ReservationSoap reservationSoap = new ReservationSoap();
        reservationSoap.setId(reservation.getId());
        reservationSoap.setCarId(reservation.getCarId());
        reservationSoap.setStartTime(mapLocalDateTimeToXMLGregorianCalendar(reservation.getStartTime()));
        reservationSoap.setEndTime(mapLocalDateTimeToXMLGregorianCalendar(reservation.getEndTime()));
        reservationSoap.setReservationStatus(ReservationStatusSoap.fromValue(reservation.getStatus().name()));
        reservationSoap.setDriverId(reservation.getDriverId());
        return reservationSoap;
    }

    /**
     * Map from LocalDateTime to XMLGregorianCalendar
     *
     * @param localDateTime LocalDateTime
     * @return XMLGregorianCalendar
     */
    private XMLGregorianCalendar mapLocalDateTimeToXMLGregorianCalendar(LocalDateTime localDateTime) {
        return DatatypeFactory.newDefaultInstance().newXMLGregorianCalendar(localDateTime.toString());
    }

    /**
     * Map from LocalDateTime to XMLGregorianCalendar
     *
     * @param gregorianCalendar LocalDateTime
     * @return XMLGregorianCalendar
     */
    private LocalDateTime mapXMLGregorianCalendarToLocalDateTime(XMLGregorianCalendar gregorianCalendar) {
        return gregorianCalendar.toGregorianCalendar().toZonedDateTime().toLocalDateTime();
    }

    public Reservation mapReservationSoapToReservation(ReservationSoap reservationSoap) {
        return Reservation.builder()
                .id(reservationSoap.getId())
                .carId(reservationSoap.getCarId())
                .driverId(reservationSoap.getDriverId())
                .startTime(mapXMLGregorianCalendarToLocalDateTime(reservationSoap.getStartTime()))
                .endTime(mapXMLGregorianCalendarToLocalDateTime(reservationSoap.getEndTime()))
                .status(ReservationStatus.PENDING)
                .build();
    }
}
